// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Client {
  id        String   @id @default(uuid())
  name      String
  address   String
  rfc       String
  email     String
  phone     String
  state     Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Sale Sale[]
}

model Supplier {
  id        String   @id @default(uuid())
  name      String
  address   String
  rfc       String
  email     String
  phone     String
  state     Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Batche Batche[]
}

model Warehouse {
  id           String     @id @default(uuid())
  name         String
  address      String
  email        String
  phone        String
  state        Boolean    @default(true)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  Batche       Batche[]   @relation(name: "Warehouse")
  SupWarehouse Batche[]   @relation(name: "SupWarehouse")

  SaleDetail   SaleDetail[]
  inventory    Inventory[]
  waste        Waste[]
  Sale         Sale[]
}

model Product {
  id        String   @id @default(uuid())
  name      String
  descrip   String
  brand     String
  code      String
  unit      SaleUnit @relation(fields: [unit_id], references: [id])
  unit_id   String
  state     Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  BatcheDetail BatcheDetail[]

  SaleDetail SaleDetail[]

  inventory Inventory[]

  waste Waste[]
}

model SaleUnit {
  id        String   @id @default(uuid())
  name      String
  value     Float
  unit      String
  state     Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Product Product[]
}

model Batche {
  id               String     @id @default(uuid())
  supplier         Supplier?  @relation(fields: [supplier_id], references: [id])
  supplier_id      String?
  sup_warehouse    Warehouse? @relation(name: "SupWarehouse", fields: [sup_warehouse_id], references: [id])
  sup_warehouse_id String?
  warehouse        Warehouse  @relation(name: "Warehouse", fields: [warehouse_id], references: [id])
  warehouse_id     String
  supplierType     SupplierType
  date             DateTime
  state            Boolean    @default(true)
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt

  BatcheDetail     BatcheDetail[]
}

enum SupplierType {
  SUPPLIER
  WAREHOUSE
}

model BatcheDetail {
  id      String   @id @default(uuid())
  batche  Batche   @relation(fields: [batche_id], references: [id])
  batche_id String
  product Product @relation(fields: [product_id], references: [id])
  product_id String
  quantity Float
  price    Float
  state    Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sale {
  id        String   @id @default(uuid())
  client    Client? @relation(fields: [client_id], references: [id])
  client_id String?
  warehouse Warehouse? @relation(fields: [warehouse_id], references: [id])
  warehouse_id String?
  bill      String
  account   String
  date      DateTime
  state     Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  SaleDetail SaleDetail[]
}

model SaleDetail {
  id        String   @id @default(uuid())
  sale      Sale     @relation(fields: [sale_id], references: [id])
  sale_id   String
  product   Product @relation(fields: [product_id], references: [id])
  product_id String
  warehouse Warehouse @relation(fields: [warehouse_id], references: [id])
  warehouse_id String
  quantity Float
  price    Float
  discount Float  
  state    Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Inventory {
  id        String   @id @default(uuid())
  product   Product @relation(fields: [product_id], references: [id])
  product_id String
  warehouse Warehouse @relation(fields: [warehouse_id], references: [id])
  warehouse_id String
  quantity Float
  state    Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Waste {
  id        String   @id @default(uuid())
  product   Product @relation(fields: [product_id], references: [id])
  product_id String
  warehouse Warehouse @relation(fields: [warehouse_id], references: [id])
  warehouse_id String
  quantity Float
  reason  String
  date    DateTime
  state    Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}